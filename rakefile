require 'sshkit_addon'
require 'dotenv'
Dotenv.load

master = SSHKit::Host.new :hostname => "192.168.64.244", :user => "ubuntu", :password => "password"
# master = SSHKit::Host.new :hostname => "192.168.5.100", :user => ENV["default_user"], :password => ENV["default_password"]
# master = SSHKit::Host.new :hostname => "192.168.5.100", :user => "ubuntu", :key => %q(C:\Tools\Kitty\mykey.openssh)
# servers = cap3.servers
# on cap3.servers_by_hash[:linux] do |host|

@task_index=0
def next_task_index
  @task_index += 1
  sprintf("%02d", @task_index)
end

namespace "util" do
  desc "run command"
  task :run_command, [:cmd] do |t, args|
    cmd = args.cmd
    on master do |host|
      execute cmd
    end
  end
end

namespace :gitlab do
  require 'gitlab'
  Gitlab.endpoint = "#{ENV["GITLAB_BASE_URL"]}/api/v4"
  Gitlab.private_token = ENV["GITLAB_API_TOKEN"]

  repo_name = "knative-springboot"

  desc "create gitlab project"
  task "#{next_task_index}_create_gitlab_project" do
    Gitlab.create_project repo_name
  end

  desc "delete"
  task "#{next_task_index}_delete" do
    project = Gitlab.projects.find do |p|
      p.name== repo_name
    end
    if project.nil?
      puts "repo #{repo_name} doesn't exists"
      return
    end
    
    Gitlab.delete_project project.id
  end
end

target_dir = "knative"
namespace :knative do
  desc "build and serve"
  task "#{next_task_index}_build_and_serve" do
    on master do |host|
      file = "#{target_dir}/springboot_build.yaml"
      execute %Q(kubectl delete -f #{file} || echo not found)
      
      content = <<~EOF
        apiVersion: build.knative.dev/v1alpha1
        kind: Build
        metadata:
          name: #{build_name}
        spec:
          serviceAccountName: my-build-service-account
          source:
            git:
              url: http://turbulent-penguin-gitlab-ce/wenzm/knative-springboot.git
              revision: master
          steps:
            - name: build-and-push
              image: gcr.io/cloud-builders/mvn
              args: ['compile', 'jib:build']

    
      EOF
      
      # the my-root-ca cm was defined in ../controller_ca_patch/
      # the my-build-service-account was defined in "../my_sample/cluster_settings.rb"
      put content, file
      execute %Q(kubectl apply -f #{file})

      # The repo image is defined in the pom.xml file, as mycluster.icp:8500/default/knative-springboot:v1
    end
  end
end

